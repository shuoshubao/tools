[
    {
        "tags": [
            {
                "type": "param",
                "string": "{Function} [.validate] 校验方法",
                "name": "[.validate]",
                "description": "<p>校验方法</p>",
                "types": [
                    "Function"
                ],
                "typesDescription": "<code>Function</code>",
                "optional": true,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            },
            {
                "type": "return",
                "string": "{Promise<Boolean>} 校验结果",
                "types": [
                    "Promise<Boolean>"
                ],
                "typesDescription": "<code>Promise</code><<code>Boolean</code>>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false,
                "description": "<p>校验结果</p>"
            },
            {
                "type": "example",
                "string": "\nconst isValid = await pifyValidate(this.$refs.form.validate)\n// => false",
                "html": "<p>const isValid = await pifyValidate(this.$refs.form.validate)<br />\n// =&gt; false</p>"
            }
        ],
        "description": {
            "full": "<p>将 element-ui Form组件 的 validate 变成一个始终是resolved状态的promise, 不用写try-catch或者回调函数的形式</p>",
            "summary": "<p>将 element-ui Form组件 的 validate 变成一个始终是resolved状态的promise, 不用写try-catch或者回调函数的形式</p>",
            "body": ""
        },
        "isPrivate": false,
        "isConstructor": false,
        "isClass": false,
        "isEvent": false,
        "ignore": false,
        "line": 1,
        "codeStart": 10,
        "code": "const pifyValidate = validateFn => {\n    return new Promise(resolve => {\n        validateFn(valid => {\n            resolve(valid);\n        });\n    });\n};",
        "ctx": {
            "type": "declaration",
            "name": "pifyValidate",
            "value": "validateFn => {",
            "string": "pifyValidate"
        }
    }
]